<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on</title><link>https://www.riccardobelli.it/projects/</link><description>Recent content in Projects on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 05 Nov 2024 15:38:38 +0100</lastBuildDate><atom:link href="https://www.riccardobelli.it/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>python-can-cando</title><link>https://www.riccardobelli.it/projects/python-can-cando/</link><pubDate>Tue, 05 Nov 2024 15:38:38 +0100</pubDate><guid>https://www.riccardobelli.it/projects/python-can-cando/</guid><description>This package is available on PyPi and its source code on my GitHub.
Description This module is a plugin that lets you use netronics&amp;rsquo; can adapters (namely the CANdo and CANdoISO devices) in python-can&amp;rsquo;s plugin interface.
Installation You should have installed the netronics&amp;rsquo; CANdo drivers before using this library; otherwise you will get a DLL error (or, under linux, a shared library error).
pip install python-can-cando Usage Just like any other python-can plugin, you can access the class like so:</description></item><item><title>Convolutional networks, CIFAR-10 and complexity</title><link>https://www.riccardobelli.it/projects/cnn-cifar10-compl/</link><pubDate>Sat, 14 Jan 2023 15:38:38 +0100</pubDate><guid>https://www.riccardobelli.it/projects/cnn-cifar10-compl/</guid><description>Note: this article is also available in Italian as a pdf file.
Introduction In solving an Image Classification task, the task is to have to attribute to an image one of the labels among those available. This means that, unlike many other tasks classics of computer vision, we need only this information; we won&amp;rsquo;t have to tell where the object is in the image with a bounding box or define membership classes pixel by pixel.</description></item></channel></rss>